// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider                  = "zod-prisma-types"
  createRelationValuesTypes = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  kindeId   String   @unique
  email     String   @unique
  firstName String
  lastName  String
  bio       String?
  posts     Post[]
  createdAt DateTime @default(now())
  role      Role     @default(USER)
}

model Post {
  id              String     @id @default(uuid())
  title           String     @unique
  content         String?
  imageURL        String?
  unsplashPhotoId String?
  author          User       @relation(fields: [authorId], references: [id])
  authorId        String
  isPublished     Boolean    @default(false)
  stats           Stats?
  categories      Category[]
  slug            String     @unique
  tags            String[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  status          Status     @default(DRAFT)
}

model Stats {
  id       String @id @default(uuid())
  likes    Int    @default(0)
  dislikes Int    @default(0)
  views    Int?
  post     Post   @relation(fields: [postId], references: [id])
  postId   String @unique
}

model Category {
  id    String @id @default(uuid())
  posts Post[]
  name  String @unique
  slug  String @unique
}

enum Role {
  USER
  ADMIN
}

enum Status {
  PUBLISHED
  DRAFT
  INACTIVE
}
